(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{326:function(t,s,a){"use strict";a.r(s);var e=a(5),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("在执行SQL语句的时候，某些业务要求，一系列操作必须全部执行，而不能仅执行一部分。")]),t._v(" "),a("p",[t._v("💡 MySQL5.0后引入了事务机制，MySQL支持几种基本的数据库引擎，并非所有引擎都支持事务处理。MyISAM、InnoDB是两种最常使用的引擎。前者不支持明确的事务处理管理，而后者支持。")]),t._v(" "),a("h2",{attrs:{id:"_1-事务的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-事务的使用"}},[t._v("#")]),t._v(" 1. 事务的使用")]),t._v(" "),a("ul",[a("li",[t._v("对于单条SQL语句，数据库系统自动将其作为一个事务执行")]),t._v(" "),a("li",[t._v("多条SQL语句要想作为一个事务执行，就必须手动管理事务：")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v(" 语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-事务的特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-事务的特性"}},[t._v("#")]),t._v(" 2. 事务的特性")]),t._v(" "),a("p",[t._v("数据库事务具有ACID这4个特性：")]),t._v(" "),a("ul",[a("li",[t._v("Atomic：原子性，将所有SQL作为原子工作单元执行，要么全部执行，要么全部不执行；")]),t._v(" "),a("li",[t._v("Consistent：一致性，不管任何给定的时间，并发事务有多少，必须保证事务结果的一致性；")]),t._v(" "),a("li",[t._v("Isolation：隔离性，如果有多个事务并发执行，每个事务作出的修改必须与其他事务隔离；")]),t._v(" "),a("li",[t._v("Duration：持久性，即事务完成后，对数据库数据的修改被持久化存储。")])]),t._v(" "),a("h2",{attrs:{id:"_3-事务的隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-事务的隔离级别"}},[t._v("#")]),t._v(" 3. 事务的隔离级别")]),t._v(" "),a("p",[t._v("数据库中的事务是并发执行的，由于隔离性会给某些业务场景带来问题，所以需要设置事务的隔离级别来满足对应的业务场景。事务的四种隔离级别（隔离级别由低到高）：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("隔离级别")]),t._v(" "),a("th",[t._v("功能")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("read uncommitted")]),t._v(" "),a("td",[t._v("读取未提交数据")])]),t._v(" "),a("tr",[a("td",[t._v("read committed")]),t._v(" "),a("td",[t._v("读取已提交数据")])]),t._v(" "),a("tr",[a("td",[t._v("repeatable read")]),t._v(" "),a("td",[t._v("重复读取（默认隔离级别）")])]),t._v(" "),a("tr",[a("td",[t._v("serializable")]),t._v(" "),a("td",[t._v("序列化执行事务")])])])]),t._v(" "),a("p",[a("strong",[t._v("业务场景示例：")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 场景：两个事务同时购票，需要读取事务未提交的临时数据，查看其他事务是否已经选择该票但未提交。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ISOLATION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEVEL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READ")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNCOMMITTED")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v(" 语句\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 场景：银行转账业务，只能让当前事务读取其他事务提交后的数据")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ISOLATION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEVEL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READ")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMITTED")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v(" 语句\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 功能：其他事务的提交结果不会影响当前事务的查询结果")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 场景：用户拍下订单后还没付钱，此时涨价了，按照涨价前还是涨价后的价格呢？")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ISOLATION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEVEL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPEATABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v(" 语句\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-并发事务的常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-并发事务的常见问题"}},[t._v("#")]),t._v(" 4. 并发事务的常见问题")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("脏读")]),t._v("：当前隔离级别为 read uncommitted 时，事务A修改了数据但未提交，此时事务B能读取到事务A操作后的临时数据，而这些数据并没有确定是否提交，导致B读取到了一个不确定的脏数据。解决方法：提升隔离级别到 read committed 即可。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("不可重复读")]),t._v("：当前隔离级别等于或低于 read committed 时，在同一个事务中，同一个查询语句每次查询到的结果不一样，这听起来很正常，因为记录就是在上一次查询后真实改变了。但业务可能就是希望在本次事务中每次查询的结果不变。解决方法：提升隔离级别到 repeatable read 。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("幻读")]),t._v("：当前隔离级别等于或低于 repeatable read 时，A与B开启事务后还未提交，都查询到某条记录不存在；然后A先提交并提交成功，此时B提交事务却提示这条记录已存在。解决方法：提升隔离级别到最高的 serializable 即可。缺点：性能低下。")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);